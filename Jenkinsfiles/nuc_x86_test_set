#!groovy

buildResults = [:]

bootJob  = 'Spectrum_OS/Testing/NUC_x86/nuc_x86_boot_test'
batJob   = 'Spectrum_OS/Testing/NUC_x86/nuc_x86_bat_test'
nucDirectory = 'nuc_test_results'

bootSuite = 'boot_test_nuc.robot'
batSuite = 'bat_test_nuc.robot'

pipeline {
    agent { label 'tc-agent02' }
    stages {
      stage('Change USB HUB host to PC') {
          steps {
            script{
                sh './AcronameHubCLI -u 0'
                // wait that USB drive is mounted
                sh 'sleep 10'
                def output = sh (
                    script: 'lsblk -o model,name |grep PSSD',
                    returnStdout: true
                    ).trim()
                def list = output.split(' ')
                // Take last element which is the target USB device
                USBDEVICE = list[-1]
                println("USB device: ${USBDEVICE}")
             }
          }
      }
      stage('Write Spectrum OS image to USB disk') {
          steps {
            dir('/home/tc-agent02/Jenkins-agent/workspace/images/'){
              sh "sudo dd if=${params.IMAGE} of=/dev/sdb bs=1M status=progress conv=fsync"
             }
          }
      }
      stage('Change USB HUB host back to test device') {
          steps {
            script{
                sh './AcronameHubCLI -u 1'
             }
          }
      }
      stage('Boot NUC') {
          steps {
          	script{
              build = build(
                  job: "${bootJob}",
                  parameters: [
                    [$class: 'StringParameterValue', name: 'RF_SUITE', value: "${bootSuite}"],
                    [$class: 'StringParameterValue', name: 'DESCRIPTION', value: "Hydra buildID: ${params.BUILD_ID}"]
                  ]
              )
             }
          }
      }
      stage('BAT tests') {
          steps {
            script{
              build = build(
                  job: "${batJob}",
                  parameters: [
                    [$class: 'StringParameterValue', name: 'RF_SUITE', value: "${batSuite}"],
                    [$class: 'StringParameterValue', name: 'DESCRIPTION', value: "Hydra buildID: ${params.BUILD_ID}"]
                  ]
              )
             }
          }
      }
      stage('Bublish reports') {
          steps {
             dir("/home/tc-agent02/Jenkins-agent/workspace/results/"){
                sh "mkdir ${params.BUILD_ID}/${nucDirectory}"
                sh "cp ~/Jenkins-agent/workspace/Spectrum_OS/Testing/NUC_x86/nuc_x86_boot_test/Robot-Framework/test-suites/report.html ${params.BUILD_ID}/${nucDirectory}/boot_report.html"
                sh "cp ~/Jenkins-agent/workspace/Spectrum_OS/Testing/NUC_x86/nuc_x86_bat_test/Robot-Framework/test-suites/report.html ${params.BUILD_ID}/${nucDirectory}/bat_report.html"
                sh "cp ~/Jenkins-agent/workspace/Spectrum_OS/Testing/NUC_x86/nuc_x86_test_set/index.html ${params.BUILD_ID}/${nucDirectory}/"
                // sh "scp -s -i ~/.ssh/sftpid_ed25519 -r ${params.BUILD_ID} sftp_user@95.175.105.23:/upload"
                // sh "ssh -i ~/.ssh/trigid_ed25519 script_trigger@95.175.105.23 ${params.BUILD_ID}"
             }
          }
      }
    }
}
