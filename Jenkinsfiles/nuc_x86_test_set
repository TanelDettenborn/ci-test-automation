#!groovy

buildResults = [:]

jobName  = 'Spectrum_OS/Testing/NUC_x86/nuc_x86_boot_test'

bootSuite = 'boot_test.robot'
netvmSuite = 'netvm_test.robot'

pipeline {
    agent { label 'tc-agent02' }
    stages {
      // stage('Change USB HUB host to PC') {
      //     steps {
      //       script{
      //           sh './AcronameHubCLI -u 0'
      //           // wait that USB drive is mounted
      //           sh 'sleep 10'
      //           def output = sh (
      //               script: 'lsblk -o model,name |grep PSSD',
      //               returnStdout: true
      //               ).trim()
      //           def list = output.split(' ')
      //           // Take last element which is the target USB device
      //           USBDEVICE = list[-1]
      //           println("USB device: ${USBDEVICE}")
      //        }
      //     }
      // }
      // stage('Write Spectrum OS image to USB disk') {
      //     steps {
      //       dir('/home/tc-agent02/Jenkins-agent/workspace/NixCopyTest/'){
      //         sh "sudo dd if=${params.IMAGE} of=/dev/sdb bs=1M status=progress conv=fsync"
      //        }
      //     }
      // }
      // stage('Change USB HUB host back to test device') {
      //     steps {
      //       script{
      //           sh './AcronameHubCLI -u 1'
      //        }
      //     }
      // }
      // stage('Boot NUC') {
      //     steps {
      //     	script{
      //         build = build(
      //             job: "${jobName}",
      //             parameters: [
      //               [$class: 'StringParameterValue', name: 'RF_SUITE', value: "${bootSuite}"],
      //               [$class: 'StringParameterValue', name: 'DESCRIPTION', value: "${params.IMAGE} Boot test"]
      //             ]
      //         )
      //        }
      //     }
      // }
      // stage('BAT tests') {
      //     steps {
      //       script{
      //         build = build(
      //             job: "${jobName}",
      //             parameters: [
      //               [$class: 'StringParameterValue', name: 'RF_SUITE', value: "${netvmSuite}"],
      //               [$class: 'StringParameterValue', name: 'DESCRIPTION', value: "NETVM test"]
      //             ]
      //         )
      //        }
      //     }
      // }
      stage('Publish results') {
          steps {
            script{
                sh "mkdir nuc_test_${params.IMAGE}"
                sh "cp ~/Jenkins-agent/workspace/Spectrum_OS/Testing/NUC_x86/nuc_x86_boot_test/Robot-Framework/test-suites/log.html ~/Jenkins-agent/workspace/Spectrum_OS/Testing/NUC_x86/nuc_x86_test_set/nuc_test_${params.IMAGE}/boot_log.html"
                sh "cp ~/Jenkins-agent/workspace/Spectrum_OS/Testing/NUC_x86/nuc_x86_test_set/index.html ~/Jenkins-agent/workspace/Spectrum_OS/Testing/NUC_x86/nuc_x86_test_set/nuc_test_${params.IMAGE}/"
                sh "scp -s -i ~/.ssh/sftpid_ed25519 -r nuc_test_${params.IMAGE} sftp_user@95.175.105.23:/upload"
                sh "ssh -i ~/.ssh/trigid_ed25519 script_trigger@95.175.105.23 nuc_test_${params.IMAGE}"
             }
          }
      }
    }
}
